services:
  backend:
    container_name: backend_node
    image: recruitradar.azurecr.io/recruitradar-backend:latest
   # command: yarn dev2
    #entrypoint: >
    #  sh -c "
    #  yarn migration:run &&
    #  yarn dev2
    #  "
    #build:
    #  args:
    #   - NODE_ENV=development
    #  context: ./backend
    #  target: development
    restart: always
    env_file:
      - ./.env
    environment:
      - WATCHPACK_POLLING=true  
      - SECRET=${SECRET}
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_HOST=${TYPEORM_HOST}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_MIGRATIONS=${TYPEORM_MIGRATIONS}
      - TYPEORM_MIGRATIONS_DIR=${TYPEORM_MIGRATIONS_DIR}
      - TYPEORM_ENTITIES=${TYPEORM_ENTITIES}
      - TYPEORM_ENTITIES_DIR=${TYPEORM_ENTITIES_DIR}
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_PASS=${GMAIL_PASS}
    ports:
      - 3000:3000
      - 2222:2222
    volumes:
      - ./backend:/code/backend # Monta o diretório atual dentro do contêiner
      - /code/backend/node_modules # Impede que o node_modules da máquina local sobrescreva o do container
    networks:
      - dev
    
networks:
  dev:

volumes:
  db-data: